name: eVat Auto Deploy
on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master
  workflow_dispatch: null
env:
  GITHUB_WORKING_DIRECTORY: ./
  IIS_WEBAPP_PATH: 'C:\inetpub\wwwroot\evat-workflow-api'
  DOTNET_VERSION: 6.0.x
jobs:

  run-test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        run: echo "Running Testing"

  run-lint:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        run: echo "Running Super linter for quality code checks"

  build:
    runs-on: psl-app-vm3
    needs:
      - run-test
    steps:
      - uses: actions/checkout@v3
      - name: Setup .NET Core ⚙️⚙️
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: '${{ env.DOTNET_VERSION }}'

      - name: Install dependencies ⛑️⛑️
        working-directory: '${{ env.GITHUB_WORKING_DIRECTORY }}'
        run: dotnet restore

      - name: Build with dotnet ⚒️⚒️
        working-directory: '${{ env.GITHUB_WORKING_DIRECTORY }}'
        run: dotnet build --configuration Release --no-restore

      - name: Publish 
        working-directory: '${{ env.GITHUB_WORKING_DIRECTORY }}'
        run: >-
          dotnet publish --configuration Release  /p:EnvironmentName=webappsvm3 --output '${{ env.GITHUB_WORKING_DIRECTORY }}/publish'

      - name: Upload a Build Artifact ⤴️⤴️
        uses: actions/upload-artifact@v4
        with:
          name: .net-app
          path: |
            '${{ env.GITHUB_WORKING_DIRECTORY }}/publish'

  deploy-dev:
    name: Deploy to IIS Test (APP-VM3)
    if: github.event_name == 'pull_request'
    needs:
      - build
    runs-on: psl-app-vm3
    environment:
      name: Development
      url: 'https://psl-app-vm3/evat-workflow-api/swagger'
    steps:
      - name: Take application offline
        run: >-
          New-Item -Type File -Name app_offline.htm -Path ${{
          env.IIS_WEBAPP_PATH }} -Force
      - name: Set Offline HTML file
        run: >-
          Set-Content ${{ env.IIS_WEBAPP_PATH }}\app_offline.htm 'Site Under
          Maintenance'
      - name: Download new binaries over the top of the app
        uses: actions/download-artifact@v4
        with:
          name: .net-app
          path: '${{ env.IIS_WEBAPP_PATH }}'
      - name: Bring the app back online
        run: 'Remove-Item ${{ env.IIS_WEBAPP_PATH }}\app_offline.htm'

  deploy-test:
    name: Deploy to IIS Dev (WEBAPPS-VM3)
    if: github.event.ref == 'refs/heads/master'
    needs:
      - build
    runs-on: psl-webapps-vm3
    environment:
      name: Development
      url: 'https://psl-webapps-vm3/evat-workflow-api/swagger'
    steps:
      - name: Take application offline
        run: >-
          New-Item -Type File -Name app_offline.htm -Path ${{
          env.IIS_WEBAPP_PATH }} -Force
      - name: Set Offline HTML file
        run: >-
          Set-Content ${{ env.IIS_WEBAPP_PATH }}\app_offline.htm 'Site Under
          Maintenance'
      - name: Download new binaries over the top of the app
        uses: actions/download-artifact@v4
        with:
          name: .net-app
          path: '${{ env.IIS_WEBAPP_PATH }}'
      - name: Bring the app back online
        run: 'Remove-Item ${{ env.IIS_WEBAPP_PATH }}\app_offline.htm'

  deploy-staging:
    name: Deploy to IIS Staging (QA)
    needs:
      - deploy-test
    runs-on: persolqa-com
    environment:
      name: Staging
      url: 'https://evat-workflow-api.persolqa.com/swagger'
    steps:
      - name: Take application offline
        run: >-
          New-Item -Type File -Name app_offline.htm -Path ${{
          env.IIS_WEBAPP_PATH }} -Force
      - name: Set Offline HTML file
        run: >-
          Set-Content ${{ env.IIS_WEBAPP_PATH }}\app_offline.htm 'Site Under
          Maintenance'
      - name: Download new binaries over the top of the app
        uses: actions/download-artifact@v4
        with:
          name: .net-app
          path: '${{ env.IIS_WEBAPP_PATH }}'
      - name: Bring the app back online
        run: 'Remove-Item ${{ env.IIS_WEBAPP_PATH }}\app_offline.htm'

  deploy-prod:
    name: Deploy to IIS Production (CIMSGH.COM)
    needs:
      - deploy-staging
    runs-on: psl-app-vm3
    environment:
      name: Production
      url: 'http://www.myapp.com'
    steps:
      - name: Take application offline
        run: >-
          New-Item -Type File -Name app_offline.htm -Path ${{
          env.IIS_WEBAPP_PATH }} -Force
      - name: Set Offline HTML file
        run: >-
          Set-Content ${{ env.IIS_WEBAPP_PATH }}\app_offline.htm 'Site Under
          Maintenance'
      - name: Download new binaries over the top of the app
        uses: actions/download-artifact@v4
        with:
          name: .net-app
          path: '${{ env.IIS_WEBAPP_PATH }}'
      - name: Bring the app back online
        run: 'Remove-Item ${{ env.IIS_WEBAPP_PATH }}\app_offline.htm'

  report:
   if: failure()
   needs: [run-lint, deploy-prod]
   runs-on: ubuntu-latest
   steps:
     - name: Output report information
       run: | 
        echo "Something went wrong"
        echo "${{ github }}"