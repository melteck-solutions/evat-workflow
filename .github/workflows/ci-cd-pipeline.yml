name: CI CD Pipeline

on:
  #push:
  #  branches: [ master ]
  #pull_request:
  #  branches: [ master ]
  workflow_dispatch:

jobs:
  Build:
    runs-on: psl-app-vm3
    steps:
      - uses: actions/checkout@v3
      - name: Compile
        run: echo Hello, world!
        
  AutoMerge:
    name: Merge pull request
    runs-on: psl-app-vm3
    needs: [Build]
    if: github.base_ref == 'master' && github.actor == 'dependabot[bot]'
    steps:
        - name: Merge
          uses: actions/github-script@0.2.0
          with:
           script: |
            github.pullRequests.merge({
                owner: context.payload.repository.owner.login,
                repo: context.payload.repository.name,
                pull_number: context.payload.pull_request.number
            })
           github-token: ${{ github.token }}

  Linter:
    needs: [Build]
    permissions:
      contents: read
      packages: read
      statuses: write
    uses: vbem/reusable/.github/workflows/superlinter.yml@v1
    
  DeployDev:
    name: Deploy to Dev 
    if: github.event_name != 'pull_request'
    needs: [Linter]
    runs-on: psl-app-vm3
    environment: 
      name: Development
      url: 'http://dev.myapp.com'
    steps:
      - name: Deploy
        run: echo I am deploying! 
    
  DeployStaging:
    name: Deploy to Staging 
    if: github.event.ref == 'refs/heads/master'
    needs: [Linter]
    runs-on: psl-app-vm3
    environment: 
      name: Staging
      url: 'http://test.myapp.com'
    steps:
      - name: Deploy
        run: echo I am deploying! 
            
  DeployProd:
    name: Deploy to Production 
    needs: [DeployStaging]
    runs-on: psl-app-vm3
    environment: 
      name: Production
      url: 'http://www.myapp.com'
    steps:
      - name: Deploy
        run: echo I am deploying! 
