name: CI CD Pipeline

on:
  #push:
  #  branches: [ master ]
  #pull_request:
  #  branches: [ master ]
  workflow_dispatch:

jobs:
  build:
    runs-on: psl-app-vm3
    steps:
      - uses: actions/checkout@v3

      # setup dotnet
      - name: Setup .NET Core ⚙️⚙️
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: 6.0.x

      - name: Install dependencies ⛑️⛑️
        run: dotnet restore
      
      - name: Build with dotnet ⚒️⚒️
        run: dotnet build --configuration Release --no-restore

      - name: Upload Artifact to local folder ⤴️⤴️ 
        run: |
          dotnet publish --configuration Release --no-restore --output ./publish
        
  test:
    needs: build
    runs-on: psl-app-vm3
    steps:
    - name: Running a Unit Test 🔍🔎
      run: echo running a test on build # dotnet test src\AspNetCoreAPI-GitHubAction.Test
      
  AutoMerge:
    name: Merge pull request
    runs-on: psl-app-vm3
    needs: [build]
    if: github.base_ref == 'master' && github.actor == 'dependabot[bot]'
    steps:
        - name: Merge
          uses: actions/github-script@0.2.0
          with:
           script: |
            github.pullRequests.merge({
                owner: context.payload.repository.owner.login,
                repo: context.payload.repository.name,
                pull_number: context.payload.pull_request.number
            })
           github-token: ${{ github.token }}

  linter:
    needs: [build]
    permissions:
      contents: read
      packages: read
      statuses: write
    uses: vbem/reusable/.github/workflows/superlinter.yml@v1
    
  DeployDev:
    name: Deploy to IIS Dev (APP-VM3)
    if: github.event_name != 'pull_request'
    needs: [linter]
    runs-on: psl-app-vm3
    environment: 
      name: Development
      url: 'http://dev.myapp.com'
    steps:
      - name: Create a offline file
        run: echo "" > app_offline.htm    
      - uses: ChristopheLav/iis-deploy@v1
        with:
          website-name: 'evat-workflow'
          msdeploy-service-url: '192.168.0.68'
          msdeploy-username: 'installmanager'
          msdeploy-password: 'install@bj2013'
          source-path: '${{ github.workspace }}'
      - name: Deploy
        run: echo I am deploying! 
    
  DeployStaging1:
    name: Deploy to IIS Staging (QA-1)
    if: github.event.ref == 'refs/heads/master'
    needs: [DeployDev]
    runs-on: psl-app-vm3
    environment: 
      name: Staging
      url: 'http://test.myapp.com'
    steps:
      - name: Deploy
        run: echo I am deploying! 
        
  DeployStaging2:
    name: Deploy to IIS Staging (QA-2)
    if: github.event.ref == 'refs/heads/master'
    needs: [DeployDev]
    runs-on: psl-app-vm3
    environment: 
      name: Staging
      url: 'http://test.myapp.com'
    steps:
      - name: Deploy
        run: echo I am deploying! 
        
  DeployProd:
    name: Deploy to IIS Production 
    needs: [DeployStaging1, DeployStaging2]
    runs-on: psl-app-vm3
    environment: 
      name: Production
      url: 'http://www.myapp.com'
    steps:
      - name: Deploy
        run: echo I am deploying! 
